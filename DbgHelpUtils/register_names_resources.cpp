#include "register_names.h"

#include "flags_string_utils.h"

using namespace std::string_literals;

namespace dlg_help_utils::register_names
{
    namespace
    {
       std::unordered_map<CV_HREG_e, std::wstring> const g_register_names =
        {
            {CV_AMD64_AL, L"AL"s},
            {CV_AMD64_BL, L"BL"s},
            {CV_AMD64_CL, L"CL"s},
            {CV_AMD64_DL, L"DL"s},
            {CV_AMD64_AX, L"AX"s},
            {CV_AMD64_BX, L"BX"s},
            {CV_AMD64_CX, L"CX"s},
            {CV_AMD64_DX, L"DX"s},
            {CV_AMD64_SP, L"SP"s},
            {CV_AMD64_BP, L"BP"s},
            {CV_AMD64_SI, L"SI"s},
            {CV_AMD64_DI, L"DI"s},
            {CV_AMD64_EAX, L"EAX"s},
            {CV_AMD64_EBX, L"EBX"s},
            {CV_AMD64_ECX, L"ECX"s},
            {CV_AMD64_EDX, L"EDX"s},
            {CV_AMD64_ESP, L"ESP"s},
            {CV_AMD64_EBP, L"EBP"s},
            {CV_AMD64_ESI, L"ESI"s},
            {CV_AMD64_EDI, L"EDI"s},
            {CV_AMD64_RAX, L"RAX"s},
            {CV_AMD64_RBX, L"RBX"s},
            {CV_AMD64_RCX, L"RCX"s},
            {CV_AMD64_RDX, L"RDX"s},
            {CV_AMD64_RSP, L"RSP"s},
            {CV_AMD64_RBP, L"RBP"s},
            {CV_AMD64_RSI, L"RSI"s},
            {CV_AMD64_RDI, L"RDI"s},
            {CV_AMD64_R8B, L"R8B"s},
            {CV_AMD64_R9B, L"R9B"s},
            {CV_AMD64_R10B, L"R10B"s},
            {CV_AMD64_R11B, L"R11B"s},
            {CV_AMD64_R12B, L"R12B"s},
            {CV_AMD64_R13B, L"R13B"s},
            {CV_AMD64_R14B, L"R14B"s},
            {CV_AMD64_R15B, L"R15B"s},
            {CV_AMD64_R8W, L"R8W"s},
            {CV_AMD64_R9W, L"R9W"s},
            {CV_AMD64_R10W, L"R10W"s},
            {CV_AMD64_R11W, L"R11W"s},
            {CV_AMD64_R12W, L"R12W"s},
            {CV_AMD64_R13W, L"R13W"s},
            {CV_AMD64_R14W, L"R14W"s},
            {CV_AMD64_R15W, L"R15W"s},
            {CV_AMD64_R8D, L"R8D"s},
            {CV_AMD64_R9D, L"R9D"s},
            {CV_AMD64_R10D, L"R10D"s},
            {CV_AMD64_R11D, L"R11D"s},
            {CV_AMD64_R12D, L"R12D"s},
            {CV_AMD64_R13D, L"R13D"s},
            {CV_AMD64_R14D, L"R14D"s},
            {CV_AMD64_R15D, L"R15D"s},
            {CV_AMD64_R8, L"R8"s},
            {CV_AMD64_R9, L"R9"s},
            {CV_AMD64_R10, L"R10"s},
            {CV_AMD64_R11, L"R11"s},
            {CV_AMD64_R12, L"R12"s},
            {CV_AMD64_R13, L"R13"s},
            {CV_AMD64_R14, L"R14"s},
            {CV_AMD64_R15, L"R15"s},
            {CV_AMD64_DR0, L"DR0"s},
            {CV_AMD64_DR1, L"DR1"s},
            {CV_AMD64_DR2, L"DR2"s},
            {CV_AMD64_DR3, L"DR3"s},
            {CV_AMD64_DR6, L"DR6"s},
            {CV_AMD64_DR7, L"DR7"s},
            {CV_AMD64_ST0, L"ST0"s},
            {CV_AMD64_ST1, L"ST1"s},
            {CV_AMD64_ST2, L"ST2"s},
            {CV_AMD64_ST3, L"ST3"s},
            {CV_AMD64_ST4, L"ST4"s},
            {CV_AMD64_ST5, L"ST5"s},
            {CV_AMD64_ST6, L"ST6"s},
            {CV_AMD64_ST7, L"ST7"s},
            {CV_AMD64_CTRL, L"FPCTRL"s},
            {CV_AMD64_STAT, L"FPSTAT"s},
            {CV_AMD64_TAG, L"FPTAG"s},
            {CV_AMD64_FPIP, L"FPIP"s},
            {CV_AMD64_FPCS, L"FPCS"s},
            {CV_AMD64_FPDO, L"FPDO"s},
            {CV_AMD64_FPDS, L"FPDS"s},
            {CV_AMD64_MM0, L"MM0"s},
            {CV_AMD64_MM1, L"MM1"s},
            {CV_AMD64_MM2, L"MM2"s},
            {CV_AMD64_MM3, L"MM3"s},
            {CV_AMD64_MM4, L"MM4"s},
            {CV_AMD64_MM5, L"MM5"s},
            {CV_AMD64_MM6, L"MM6"s},
            {CV_AMD64_MM7, L"MM7"s},
            {CV_AMD64_XMM0, L"XMM0"s},
            {CV_AMD64_XMM1, L"XMM1"s},
            {CV_AMD64_XMM2, L"XMM2"s},
            {CV_AMD64_XMM3, L"XMM3"s},
            {CV_AMD64_XMM4, L"XMM4"s},
            {CV_AMD64_XMM5, L"XMM5"s},
            {CV_AMD64_XMM6, L"XMM6"s},
            {CV_AMD64_XMM7, L"XMM7"s},
            {CV_AMD64_XMM0_0, L"XMM0 0 (uint32_t)"s},
            {CV_AMD64_XMM0_1, L"XMM0 1 (uint32_t)"s},
            {CV_AMD64_XMM0_2, L"XMM0 2 (uint32_t)"s},
            {CV_AMD64_XMM0_3, L"XMM0 3 (uint32_t)"s},
            {CV_AMD64_XMM1_0, L"XMM1 0 (uint32_t)"s},
            {CV_AMD64_XMM1_1, L"XMM1 1 (uint32_t)"s},
            {CV_AMD64_XMM1_2, L"XMM1 2 (uint32_t)"s},
            {CV_AMD64_XMM1_3, L"XMM1 3 (uint32_t)"s},
            {CV_AMD64_XMM2_0, L"XMM2 0 (uint32_t)"s},
            {CV_AMD64_XMM2_1, L"XMM2 1 (uint32_t)"s},
            {CV_AMD64_XMM2_2, L"XMM2 2 (uint32_t)"s},
            {CV_AMD64_XMM2_3, L"XMM2 3 (uint32_t)"s},
            {CV_AMD64_XMM3_0, L"XMM3 0 (uint32_t)"s},
            {CV_AMD64_XMM3_1, L"XMM3 1 (uint32_t)"s},
            {CV_AMD64_XMM3_2, L"XMM3 2 (uint32_t)"s},
            {CV_AMD64_XMM3_3, L"XMM3 3 (uint32_t)"s},
            {CV_AMD64_XMM4_0, L"XMM4 0 (uint32_t)"s},
            {CV_AMD64_XMM4_1, L"XMM4 1 (uint32_t)"s},
            {CV_AMD64_XMM4_2, L"XMM4 2 (uint32_t)"s},
            {CV_AMD64_XMM4_3, L"XMM4 3 (uint32_t)"s},
            {CV_AMD64_XMM5_0, L"XMM5 0 (uint32_t)"s},
            {CV_AMD64_XMM5_1, L"XMM5 1 (uint32_t)"s},
            {CV_AMD64_XMM5_2, L"XMM5 2 (uint32_t)"s},
            {CV_AMD64_XMM5_3, L"XMM5 3 (uint32_t)"s},
            {CV_AMD64_XMM6_0, L"XMM6 0 (uint32_t)"s},
            {CV_AMD64_XMM6_1, L"XMM6 1 (uint32_t)"s},
            {CV_AMD64_XMM6_2, L"XMM6 2 (uint32_t)"s},
            {CV_AMD64_XMM6_3, L"XMM6 3 (uint32_t)"s},
            {CV_AMD64_XMM7_0, L"XMM7 0 (uint32_t)"s},
            {CV_AMD64_XMM7_1, L"XMM7 1 (uint32_t)"s},
            {CV_AMD64_XMM7_2, L"XMM7 2 (uint32_t)"s},
            {CV_AMD64_XMM7_3, L"XMM7 3 (uint32_t)"s},
            {CV_AMD64_YMM0, L"YMM0"s},
            {CV_AMD64_YMM1, L"YMM1"s},
            {CV_AMD64_YMM2, L"YMM2"s},
            {CV_AMD64_YMM3, L"YMM3"s},
            {CV_AMD64_YMM4, L"YMM4"s},
            {CV_AMD64_YMM5, L"YMM5"s},
            {CV_AMD64_YMM6, L"YMM6"s},
            {CV_AMD64_YMM7, L"YMM7"s},
            {CV_AMD64_YMM8, L"YMM8"s},
            {CV_AMD64_YMM9, L"YMM9"s},
            {CV_AMD64_YMM10, L"YMM10"s},
            {CV_AMD64_YMM11, L"YMM11"s},
            {CV_AMD64_YMM12, L"YMM12"s},
            {CV_AMD64_YMM13, L"YMM13"s},
            {CV_AMD64_YMM14, L"YMM14"s},
            {CV_AMD64_YMM15, L"YMM15"s},
            {CV_AMD64_YMM0H, L"YMM0 H (uint128_t)"s},
            {CV_AMD64_YMM1H, L"YMM1 H (uint128_t)"s},
            {CV_AMD64_YMM2H, L"YMM2 H (uint128_t)"s},
            {CV_AMD64_YMM3H, L"YMM3 H (uint128_t)"s},
            {CV_AMD64_YMM4H, L"YMM4 H (uint128_t)"s},
            {CV_AMD64_YMM5H, L"YMM5 H (uint128_t)"s},
            {CV_AMD64_YMM6H, L"YMM6 H (uint128_t)"s},
            {CV_AMD64_YMM7H, L"YMM7 H (uint128_t)"s},
            {CV_AMD64_YMM8H, L"YMM8 H (uint128_t)"s},
            {CV_AMD64_YMM9H, L"YMM9 H (uint128_t)"s},
            {CV_AMD64_YMM10H, L"YMM10 H (uint128_t)"s},
            {CV_AMD64_YMM11H, L"YMM11 H (uint128_t)"s},
            {CV_AMD64_YMM12H, L"YMM12 H (uint128_t)"s},
            {CV_AMD64_YMM13H, L"YMM13 H (uint128_t)"s},
            {CV_AMD64_YMM14H, L"YMM14 H (uint128_t)"s},
            {CV_AMD64_YMM15H, L"YMM15 H (uint128_t)"s},
            {CV_AMD64_XMM0IL, L"XMM0 L (uint64_t)"s},
            {CV_AMD64_XMM1IL, L"XMM1 L (uint64_t)"s},
            {CV_AMD64_XMM2IL, L"XMM2 L (uint64_t)"s},
            {CV_AMD64_XMM3IL, L"XMM3 L (uint64_t)"s},
            {CV_AMD64_XMM4IL, L"XMM4 L (uint64_t)"s},
            {CV_AMD64_XMM5IL, L"XMM5 L (uint64_t)"s},
            {CV_AMD64_XMM6IL, L"XMM6 L (uint64_t)"s},
            {CV_AMD64_XMM7IL, L"XMM7 L (uint64_t)"s},
            {CV_AMD64_XMM8IL, L"XMM8 L (uint64_t)"s},
            {CV_AMD64_XMM9IL, L"XMM9 L (uint64_t)"s},
            {CV_AMD64_XMM10IL, L"XMM10 L (uint64_t)"s},
            {CV_AMD64_XMM11IL, L"XMM11 L (uint64_t)"s},
            {CV_AMD64_XMM12IL, L"XMM12 L (uint64_t)"s},
            {CV_AMD64_XMM13IL, L"XMM13 L (uint64_t)"s},
            {CV_AMD64_XMM14IL, L"XMM14 L (uint64_t)"s},
            {CV_AMD64_XMM15IL, L"XMM15 L (uint64_t)"s},
            {CV_AMD64_XMM0IH, L"XMM0 H (uint64_t)"s},
            {CV_AMD64_XMM1IH, L"XMM1 H (uint64_t)"s},
            {CV_AMD64_XMM2IH, L"XMM2 H (uint64_t)"s},
            {CV_AMD64_XMM3IH, L"XMM3 H (uint64_t)"s},
            {CV_AMD64_XMM4IH, L"XMM4 H (uint64_t)"s},
            {CV_AMD64_XMM5IH, L"XMM5 H (uint64_t)"s},
            {CV_AMD64_XMM6IH, L"XMM6 H (uint64_t)"s},
            {CV_AMD64_XMM7IH, L"XMM7 H (uint64_t)"s},
            {CV_AMD64_XMM8IH, L"XMM8 H (uint64_t)"s},
            {CV_AMD64_XMM9IH, L"XMM9 H (uint64_t)"s},
            {CV_AMD64_XMM10IH, L"XMM10 H (uint64_t)"s},
            {CV_AMD64_XMM11IH, L"XMM11 H (uint64_t)"s},
            {CV_AMD64_XMM12IH, L"XMM12 H (uint64_t)"s},
            {CV_AMD64_XMM13IH, L"XMM13 H (uint64_t)"s},
            {CV_AMD64_XMM14IH, L"XMM14 H (uint64_t)"s},
            {CV_AMD64_XMM15IH, L"XMM15 H (uint64_t)"s},
            {CV_AMD64_YMM0I0, L"YMM0 0 (uint32_t)"s},
            {CV_AMD64_YMM0I1, L"YMM0 1 (uint32_t)"s},
            {CV_AMD64_YMM0I2, L"YMM0 2 (uint32_t)"s},
            {CV_AMD64_YMM0I3, L"YMM0 3 (uint32_t)"s},
            {CV_AMD64_YMM1I0, L"YMM1 0 (uint32_t)"s},
            {CV_AMD64_YMM1I1, L"YMM1 1 (uint32_t)"s},
            {CV_AMD64_YMM1I2, L"YMM1 2 (uint32_t)"s},
            {CV_AMD64_YMM1I3, L"YMM1 3 (uint32_t)"s},
            {CV_AMD64_YMM2I0, L"YMM2 0 (uint32_t)"s},
            {CV_AMD64_YMM2I1, L"YMM2 1 (uint32_t)"s},
            {CV_AMD64_YMM2I2, L"YMM2 2 (uint32_t)"s},
            {CV_AMD64_YMM2I3, L"YMM2 3 (uint32_t)"s},
            {CV_AMD64_YMM3I0, L"YMM3 0 (uint32_t)"s},
            {CV_AMD64_YMM3I1, L"YMM3 1 (uint32_t)"s},
            {CV_AMD64_YMM3I2, L"YMM3 2 (uint32_t)"s},
            {CV_AMD64_YMM3I3, L"YMM3 3 (uint32_t)"s},
            {CV_AMD64_YMM4I0, L"YMM4 0 (uint32_t)"s},
            {CV_AMD64_YMM4I1, L"YMM4 1 (uint32_t)"s},
            {CV_AMD64_YMM4I2, L"YMM4 2 (uint32_t)"s},
            {CV_AMD64_YMM4I3, L"YMM4 3 (uint32_t)"s},
            {CV_AMD64_YMM6I0, L"YMM5 0 (uint32_t)"s},
            {CV_AMD64_YMM6I1, L"YMM5 1 (uint32_t)"s},
            {CV_AMD64_YMM6I2, L"YMM5 2 (uint32_t)"s},
            {CV_AMD64_YMM6I3, L"YMM5 3 (uint32_t)"s},
            {CV_AMD64_YMM7I0, L"YMM8 0 (uint32_t)"s},
            {CV_AMD64_YMM7I1, L"YMM8 1 (uint32_t)"s},
            {CV_AMD64_YMM7I2, L"YMM8 2 (uint32_t)"s},
            {CV_AMD64_YMM7I3, L"YMM8 3 (uint32_t)"s},
            {CV_AMD64_YMM9I0, L"YMM9 0 (uint32_t)"s},
            {CV_AMD64_YMM9I1, L"YMM9 1 (uint32_t)"s},
            {CV_AMD64_YMM9I2, L"YMM9 2 (uint32_t)"s},
            {CV_AMD64_YMM9I3, L"YMM9 3 (uint32_t)"s},
            {CV_AMD64_YMM10I0, L"YMM10 0 (uint32_t)"s},
            {CV_AMD64_YMM10I1, L"YMM10 1 (uint32_t)"s},
            {CV_AMD64_YMM10I2, L"YMM10 2 (uint32_t)"s},
            {CV_AMD64_YMM10I3, L"YMM10 3 (uint32_t)"s},
            {CV_AMD64_YMM11I0, L"YMM11 0 (uint32_t)"s},
            {CV_AMD64_YMM11I1, L"YMM11 1 (uint32_t)"s},
            {CV_AMD64_YMM11I2, L"YMM11 2 (uint32_t)"s},
            {CV_AMD64_YMM11I3, L"YMM11 3 (uint32_t)"s},
            {CV_AMD64_YMM12I0, L"YMM12 0 (uint32_t)"s},
            {CV_AMD64_YMM12I1, L"YMM12 1 (uint32_t)"s},
            {CV_AMD64_YMM12I2, L"YMM12 2 (uint32_t)"s},
            {CV_AMD64_YMM12I3, L"YMM12 3 (uint32_t)"s},
            {CV_AMD64_YMM14I0, L"YMM14 0 (uint32_t)"s},
            {CV_AMD64_YMM14I1, L"YMM14 1 (uint32_t)"s},
            {CV_AMD64_YMM14I2, L"YMM14 2 (uint32_t)"s},
            {CV_AMD64_YMM14I3, L"YMM14 3 (uint32_t)"s},
            {CV_AMD64_YMM15I0, L"YMM15 0 (uint32_t)"s},
            {CV_AMD64_YMM15I1, L"YMM15 1 (uint32_t)"s},
            {CV_AMD64_YMM15I2, L"YMM15 2 (uint32_t)"s},
            {CV_AMD64_YMM15I3, L"YMM15 3 (uint32_t)"s},
            {CV_AMD64_YMM0F0, L"YMM0 0 (float32_t)"s},
            {CV_AMD64_YMM0F1, L"YMM0 1 (float32_t)"s},
            {CV_AMD64_YMM0F2, L"YMM0 2 (float32_t)"s},
            {CV_AMD64_YMM0F3, L"YMM0 3 (float32_t)"s},
            {CV_AMD64_YMM0F4, L"YMM0 4 (float32_t)"s},
            {CV_AMD64_YMM0F5, L"YMM0 5 (float32_t)"s},
            {CV_AMD64_YMM0F6, L"YMM0 6 (float32_t)"s},
            {CV_AMD64_YMM0F7, L"YMM0 7 (float32_t)"s},
            {CV_AMD64_YMM1F0, L"YMM1 0 (float32_t)"s},
            {CV_AMD64_YMM1F1, L"YMM1 1 (float32_t)"s},
            {CV_AMD64_YMM1F2, L"YMM1 2 (float32_t)"s},
            {CV_AMD64_YMM1F3, L"YMM1 3 (float32_t)"s},
            {CV_AMD64_YMM1F4, L"YMM1 4 (float32_t)"s},
            {CV_AMD64_YMM1F5, L"YMM1 5 (float32_t)"s},
            {CV_AMD64_YMM1F6, L"YMM1 6 (float32_t)"s},
            {CV_AMD64_YMM1F7, L"YMM1 7 (float32_t)"s},
            {CV_AMD64_YMM2F0, L"YMM2 0 (float32_t)"s},
            {CV_AMD64_YMM2F1, L"YMM2 1 (float32_t)"s},
            {CV_AMD64_YMM2F2, L"YMM2 2 (float32_t)"s},
            {CV_AMD64_YMM2F3, L"YMM2 3 (float32_t)"s},
            {CV_AMD64_YMM2F4, L"YMM2 4 (float32_t)"s},
            {CV_AMD64_YMM2F5, L"YMM2 5 (float32_t)"s},
            {CV_AMD64_YMM2F6, L"YMM2 6 (float32_t)"s},
            {CV_AMD64_YMM2F7, L"YMM2 7 (float32_t)"s},
            {CV_AMD64_YMM3F0, L"YMM3 0 (float32_t)"s},
            {CV_AMD64_YMM3F1, L"YMM3 1 (float32_t)"s},
            {CV_AMD64_YMM3F2, L"YMM3 2 (float32_t)"s},
            {CV_AMD64_YMM3F3, L"YMM3 3 (float32_t)"s},
            {CV_AMD64_YMM3F4, L"YMM3 4 (float32_t)"s},
            {CV_AMD64_YMM3F5, L"YMM3 5 (float32_t)"s},
            {CV_AMD64_YMM3F6, L"YMM3 6 (float32_t)"s},
            {CV_AMD64_YMM3F7, L"YMM3 7 (float32_t)"s},
            {CV_AMD64_YMM4F0, L"YMM4 0 (float32_t)"s},
            {CV_AMD64_YMM4F1, L"YMM4 1 (float32_t)"s},
            {CV_AMD64_YMM4F2, L"YMM4 2 (float32_t)"s},
            {CV_AMD64_YMM4F3, L"YMM4 3 (float32_t)"s},
            {CV_AMD64_YMM4F4, L"YMM4 4 (float32_t)"s},
            {CV_AMD64_YMM4F5, L"YMM4 5 (float32_t)"s},
            {CV_AMD64_YMM4F6, L"YMM4 6 (float32_t)"s},
            {CV_AMD64_YMM4F7, L"YMM4 7 (float32_t)"s},
            {CV_AMD64_YMM5F0, L"YMM5 0 (float32_t)"s},
            {CV_AMD64_YMM5F1, L"YMM5 1 (float32_t)"s},
            {CV_AMD64_YMM5F2, L"YMM5 2 (float32_t)"s},
            {CV_AMD64_YMM5F3, L"YMM5 3 (float32_t)"s},
            {CV_AMD64_YMM5F4, L"YMM5 4 (float32_t)"s},
            {CV_AMD64_YMM5F5, L"YMM5 5 (float32_t)"s},
            {CV_AMD64_YMM5F6, L"YMM5 6 (float32_t)"s},
            {CV_AMD64_YMM5F7, L"YMM5 7 (float32_t)"s},
            {CV_AMD64_YMM6F0, L"YMM6 0 (float32_t)"s},
            {CV_AMD64_YMM6F1, L"YMM6 1 (float32_t)"s},
            {CV_AMD64_YMM6F2, L"YMM6 2 (float32_t)"s},
            {CV_AMD64_YMM6F3, L"YMM6 3 (float32_t)"s},
            {CV_AMD64_YMM6F4, L"YMM6 4 (float32_t)"s},
            {CV_AMD64_YMM6F5, L"YMM6 5 (float32_t)"s},
            {CV_AMD64_YMM6F6, L"YMM6 6 (float32_t)"s},
            {CV_AMD64_YMM6F7, L"YMM6 7 (float32_t)"s},
            {CV_AMD64_YMM7F0, L"YMM7 0 (float32_t)"s},
            {CV_AMD64_YMM7F1, L"YMM7 1 (float32_t)"s},
            {CV_AMD64_YMM7F2, L"YMM7 2 (float32_t)"s},
            {CV_AMD64_YMM7F3, L"YMM7 3 (float32_t)"s},
            {CV_AMD64_YMM7F4, L"YMM7 4 (float32_t)"s},
            {CV_AMD64_YMM7F5, L"YMM7 5 (float32_t)"s},
            {CV_AMD64_YMM7F6, L"YMM7 6 (float32_t)"s},
            {CV_AMD64_YMM7F7, L"YMM7 7 (float32_t)"s},
            {CV_AMD64_YMM8F0, L"YMM8 0 (float32_t)"s},
            {CV_AMD64_YMM8F1, L"YMM8 1 (float32_t)"s},
            {CV_AMD64_YMM8F2, L"YMM8 2 (float32_t)"s},
            {CV_AMD64_YMM8F3, L"YMM8 3 (float32_t)"s},
            {CV_AMD64_YMM8F4, L"YMM8 4 (float32_t)"s},
            {CV_AMD64_YMM8F5, L"YMM8 5 (float32_t)"s},
            {CV_AMD64_YMM8F6, L"YMM8 6 (float32_t)"s},
            {CV_AMD64_YMM8F7, L"YMM8 7 (float32_t)"s},
            {CV_AMD64_YMM9F0, L"YMM9 0 (float32_t)"s},
            {CV_AMD64_YMM9F1, L"YMM9 1 (float32_t)"s},
            {CV_AMD64_YMM9F2, L"YMM9 2 (float32_t)"s},
            {CV_AMD64_YMM9F3, L"YMM9 3 (float32_t)"s},
            {CV_AMD64_YMM9F4, L"YMM9 4 (float32_t)"s},
            {CV_AMD64_YMM9F5, L"YMM9 5 (float32_t)"s},
            {CV_AMD64_YMM9F6, L"YMM9 6 (float32_t)"s},
            {CV_AMD64_YMM9F7, L"YMM9 7 (float32_t)"s},
            {CV_AMD64_YMM10F0, L"YMM10 0 (float32_t)"s},
            {CV_AMD64_YMM10F1, L"YMM10 1 (float32_t)"s},
            {CV_AMD64_YMM10F2, L"YMM10 2 (float32_t)"s},
            {CV_AMD64_YMM10F3, L"YMM10 3 (float32_t)"s},
            {CV_AMD64_YMM10F4, L"YMM10 4 (float32_t)"s},
            {CV_AMD64_YMM10F5, L"YMM10 5 (float32_t)"s},
            {CV_AMD64_YMM10F6, L"YMM10 6 (float32_t)"s},
            {CV_AMD64_YMM10F7, L"YMM10 7 (float32_t)"s},
            {CV_AMD64_YMM11F0, L"YMM11 0 (float32_t)"s},
            {CV_AMD64_YMM11F1, L"YMM11 1 (float32_t)"s},
            {CV_AMD64_YMM11F2, L"YMM11 2 (float32_t)"s},
            {CV_AMD64_YMM11F3, L"YMM11 3 (float32_t)"s},
            {CV_AMD64_YMM11F4, L"YMM11 4 (float32_t)"s},
            {CV_AMD64_YMM11F5, L"YMM11 5 (float32_t)"s},
            {CV_AMD64_YMM11F6, L"YMM11 6 (float32_t)"s},
            {CV_AMD64_YMM11F7, L"YMM11 7 (float32_t)"s},
            {CV_AMD64_YMM12F0, L"YMM12 0 (float32_t)"s},
            {CV_AMD64_YMM12F1, L"YMM12 1 (float32_t)"s},
            {CV_AMD64_YMM12F2, L"YMM12 2 (float32_t)"s},
            {CV_AMD64_YMM12F3, L"YMM12 3 (float32_t)"s},
            {CV_AMD64_YMM12F4, L"YMM12 4 (float32_t)"s},
            {CV_AMD64_YMM12F5, L"YMM12 5 (float32_t)"s},
            {CV_AMD64_YMM12F6, L"YMM12 6 (float32_t)"s},
            {CV_AMD64_YMM12F7, L"YMM12 7 (float32_t)"s},
            {CV_AMD64_YMM13F0, L"YMM13 0 (float32_t)"s},
            {CV_AMD64_YMM13F1, L"YMM13 1 (float32_t)"s},
            {CV_AMD64_YMM13F2, L"YMM13 2 (float32_t)"s},
            {CV_AMD64_YMM13F3, L"YMM13 3 (float32_t)"s},
            {CV_AMD64_YMM13F4, L"YMM13 4 (float32_t)"s},
            {CV_AMD64_YMM13F5, L"YMM13 5 (float32_t)"s},
            {CV_AMD64_YMM13F6, L"YMM13 6 (float32_t)"s},
            {CV_AMD64_YMM13F7, L"YMM13 7 (float32_t)"s},
            {CV_AMD64_YMM14F0, L"YMM14 0 (float32_t)"s},
            {CV_AMD64_YMM14F1, L"YMM14 1 (float32_t)"s},
            {CV_AMD64_YMM14F2, L"YMM14 2 (float32_t)"s},
            {CV_AMD64_YMM14F3, L"YMM14 3 (float32_t)"s},
            {CV_AMD64_YMM14F4, L"YMM14 4 (float32_t)"s},
            {CV_AMD64_YMM14F5, L"YMM14 5 (float32_t)"s},
            {CV_AMD64_YMM14F6, L"YMM14 6 (float32_t)"s},
            {CV_AMD64_YMM14F7, L"YMM14 7 (float32_t)"s},
            {CV_AMD64_YMM15F0, L"YMM15 0 (float32_t)"s},
            {CV_AMD64_YMM15F1, L"YMM15 1 (float32_t)"s},
            {CV_AMD64_YMM15F2, L"YMM15 2 (float32_t)"s},
            {CV_AMD64_YMM15F3, L"YMM15 3 (float32_t)"s},
            {CV_AMD64_YMM15F4, L"YMM15 4 (float32_t)"s},
            {CV_AMD64_YMM15F5, L"YMM15 5 (float32_t)"s},
            {CV_AMD64_YMM15F6, L"YMM15 6 (float32_t)"s},
            {CV_AMD64_YMM15F7, L"YMM15 7 (float32_t)"s},
            {CV_AMD64_YMM0D0, L"YMM0 0 (float64_t)"s},
            {CV_AMD64_YMM0D1, L"YMM0 1 (float64_t)"s},
            {CV_AMD64_YMM0D2, L"YMM0 2 (float64_t)"s},
            {CV_AMD64_YMM0D3, L"YMM0 3 (float64_t)"s},
            {CV_AMD64_YMM1D0, L"YMM1 0 (float64_t)"s},
            {CV_AMD64_YMM1D1, L"YMM1 1 (float64_t)"s},
            {CV_AMD64_YMM1D2, L"YMM1 2 (float64_t)"s},
            {CV_AMD64_YMM1D3, L"YMM1 3 (float64_t)"s},
            {CV_AMD64_YMM2D0, L"YMM2 0 (float64_t)"s},
            {CV_AMD64_YMM2D1, L"YMM2 1 (float64_t)"s},
            {CV_AMD64_YMM2D2, L"YMM2 2 (float64_t)"s},
            {CV_AMD64_YMM2D3, L"YMM2 3 (float64_t)"s},
            {CV_AMD64_YMM3D0, L"YMM3 0 (float64_t)"s},
            {CV_AMD64_YMM3D1, L"YMM3 1 (float64_t)"s},
            {CV_AMD64_YMM3D2, L"YMM3 2 (float64_t)"s},
            {CV_AMD64_YMM3D3, L"YMM3 3 (float64_t)"s},
            {CV_AMD64_YMM4D0, L"YMM4 0 (float64_t)"s},
            {CV_AMD64_YMM4D1, L"YMM4 1 (float64_t)"s},
            {CV_AMD64_YMM4D2, L"YMM4 2 (float64_t)"s},
            {CV_AMD64_YMM4D3, L"YMM4 3 (float64_t)"s},
            {CV_AMD64_YMM5D0, L"YMM5 0 (float64_t)"s},
            {CV_AMD64_YMM5D1, L"YMM5 1 (float64_t)"s},
            {CV_AMD64_YMM5D2, L"YMM5 2 (float64_t)"s},
            {CV_AMD64_YMM5D3, L"YMM5 3 (float64_t)"s},
            {CV_AMD64_YMM6D0, L"YMM6 0 (float64_t)"s},
            {CV_AMD64_YMM6D1, L"YMM6 1 (float64_t)"s},
            {CV_AMD64_YMM6D2, L"YMM6 2 (float64_t)"s},
            {CV_AMD64_YMM6D3, L"YMM6 3 (float64_t)"s},
            {CV_AMD64_YMM7D0, L"YMM7 0 (float64_t)"s},
            {CV_AMD64_YMM7D1, L"YMM7 1 (float64_t)"s},
            {CV_AMD64_YMM7D2, L"YMM7 2 (float64_t)"s},
            {CV_AMD64_YMM7D3, L"YMM7 3 (float64_t)"s},
            {CV_AMD64_YMM8D0, L"YMM8 0 (float64_t)"s},
            {CV_AMD64_YMM8D1, L"YMM8 1 (float64_t)"s},
            {CV_AMD64_YMM8D2, L"YMM8 2 (float64_t)"s},
            {CV_AMD64_YMM8D3, L"YMM8 3 (float64_t)"s},
            {CV_AMD64_YMM9D0, L"YMM9 0 (float64_t)"s},
            {CV_AMD64_YMM9D1, L"YMM9 1 (float64_t)"s},
            {CV_AMD64_YMM9D2, L"YMM9 2 (float64_t)"s},
            {CV_AMD64_YMM9D3, L"YMM9 3 (float64_t)"s},
            {CV_AMD64_YMM10D0, L"YMM10 0 (float64_t)"s},
            {CV_AMD64_YMM10D1, L"YMM10 1 (float64_t)"s},
            {CV_AMD64_YMM10D2, L"YMM10 2 (float64_t)"s},
            {CV_AMD64_YMM10D3, L"YMM10 3 (float64_t)"s},
            {CV_AMD64_YMM11D0, L"YMM11 0 (float64_t)"s},
            {CV_AMD64_YMM11D1, L"YMM11 1 (float64_t)"s},
            {CV_AMD64_YMM11D2, L"YMM11 2 (float64_t)"s},
            {CV_AMD64_YMM11D3, L"YMM11 3 (float64_t)"s},
            {CV_AMD64_YMM12D0, L"YMM12 0 (float64_t)"s},
            {CV_AMD64_YMM12D1, L"YMM12 1 (float64_t)"s},
            {CV_AMD64_YMM12D2, L"YMM12 2 (float64_t)"s},
            {CV_AMD64_YMM12D3, L"YMM12 3 (float64_t)"s},
            {CV_AMD64_YMM13D0, L"YMM13 0 (float64_t)"s},
            {CV_AMD64_YMM13D1, L"YMM13 1 (float64_t)"s},
            {CV_AMD64_YMM13D2, L"YMM13 2 (float64_t)"s},
            {CV_AMD64_YMM13D3, L"YMM13 3 (float64_t)"s},
            {CV_AMD64_YMM14D0, L"YMM14 0 (float64_t)"s},
            {CV_AMD64_YMM14D1, L"YMM14 1 (float64_t)"s},
            {CV_AMD64_YMM14D2, L"YMM14 2 (float64_t)"s},
            {CV_AMD64_YMM14D3, L"YMM14 3 (float64_t)"s},
            {CV_AMD64_YMM15D0, L"YMM15 0 (float64_t)"s},
            {CV_AMD64_YMM15D1, L"YMM15 1 (float64_t)"s},
            {CV_AMD64_YMM15D2, L"YMM15 2 (float64_t)"s},
            {CV_AMD64_YMM15D3, L"YMM15 3 (float64_t)"s},

            {CV_ALLREG_VFRAME, L"Stack Variable"s},
        };
    }

    std::wstring get_register_name(CV_HREG_e const register_type)
    {
        return flags_string_utils::generate_enum_string(register_type, g_register_names);
    }
}
