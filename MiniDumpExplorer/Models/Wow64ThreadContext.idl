import "Models\M128A.idl";
import "Models\XmmRegister.idl";
import "Models\YmmRegister.idl";

namespace MiniDumpExplorer
{
    [default_interface]
    [Windows.UI.Xaml.Data.Bindable]
    runtimeclass Wow64ThreadContext : Microsoft.UI.Xaml.Data.INotifyPropertyChanged
    {
        Wow64ThreadContext();

        UInt32 ContextFlags { get; };
        IObservableVector<String> ContextFlagsList { get; };

        Boolean HasControl { get; };
        UInt32 Eip { get; };
        UInt32 Esp { get; };
        UInt32 Ebp { get; };
        UInt32 Cs { get; };
        UInt32 Ss { get; };
        UInt32 EFlags { get; };
        IObservableVector<String> EFlagsList { get; };

        Boolean HasInteger{ get; };
        UInt32 Eax { get; };
        UInt16 Ax { get; };
        UInt8 Al { get; };
        UInt8 Ah { get; };
        UInt32 Ebx { get; };
        UInt16 Bx { get; };
        UInt8 Bl { get; };
        UInt8 Bh { get; };
        UInt32 Ecx { get; };
        UInt16 Cx { get; };
        UInt8 Cl { get; };
        UInt8 Ch { get; };
        UInt32 Edx { get; };
        UInt16 Dx { get; };
        UInt8 Dl { get; };
        UInt8 Dh { get; };
        UInt32 Edi { get; };
        UInt16 Di { get; };
        UInt8 Dil { get; };
        UInt32 Esi { get; };
        UInt16 Si { get; };
        UInt8 Sil { get; };

        Boolean HasSegments { get; };
        UInt32 Ds { get; };
        UInt32 Es { get; };
        UInt32 Fs { get; };
        UInt32 Gs { get; };

        Boolean HasDebugRegisters{ get; };
        UInt32 Dr0{ get; };
        UInt32 Dr1{ get; };
        UInt32 Dr2{ get; };
        UInt32 Dr3{ get; };
        UInt32 Dr6{ get; };
        UInt32 Dr7{ get; };

        Boolean HasFloatingPoint{ get; };
        UInt32 ControlWord{ get; };
        IObservableVector<String> ControlWordList { get; };
        UInt32 StatusWord{ get; };
        IObservableVector<String> StatusWordList { get; };
        UInt32 TagWord{ get; };
        IObservableVector<String> TagWordList { get; };
        UInt32 ErrorOffset{ get; };
        UInt32 ErrorSelector{ get; };
        UInt32 DataOffset{ get; };
        UInt32 DataSelector{ get; };
        UInt32 Cr0NpxState { get; };
        IObservableVector<XmmRegister> FloatRegisters { get; };

        IObservableVector<XmmRegister> XmmRegisters { get; };

        Boolean HasAvx{ get; };
        Boolean HasAvxInInitState{ get; };
        IObservableVector<YmmRegister> YmmRegisters{ get; };
    }
}
